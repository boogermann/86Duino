


FFTW-WISDOM-TO-CONF(1)         fftw        FFTW-WISDOM-TO-CONF(1)


NNAAMMEE
       fftw-wisdom-to-conf  -  generate  FFTW wisdom (pre-planned
       transforms)

SSYYNNOOPPSSIISS
       ffffttww--wwiissddoomm--ttoo--ccoonnff [< _I_N_P_U_T] [> _O_U_T_P_U_T]

DDEESSCCRRIIPPTTIIOONN
       _f_f_t_w_-_w_i_s_d_o_m_-_t_o_-_c_o_n_f is a utility to generate C  ccoonnffiigguurraa--
       ttiioonn  routines  from  FFTW  wwiissddoomm files, where the latter
       contain saved information about how to  optimally  compute
       (Fourier)  transforms  of  various sizes.  A configuration
       routine is a C subroutine that you link into your program,
       replacing  a routine of the same name in the FFTW library,
       that determines which parts of FFTW are callable  by  your
       program.

       The reason to do this is that, if you only need transforms
       of a limited set of sizes and types, and if you are stati-
       cally  linking  your  program,  then using a configuration
       file generated from wisdom for those  types  can  substan-
       tially  reduce  the  size of your executable.  (Otherwise,
       because of FFTW's dynamic nature, all of FFTW's  transform
       code must be linked into any program using FFTW.)

       FFTW  is a free library to compute discrete Fourier trans-
       forms in one or more dimensions, for arbitrary sizes,  and
       of  both real and complex data, among other related opera-
       tions.  More information on FFTW can be found at the  FFTW
       home page: _h_t_t_p_:_/_/_w_w_w_._f_f_t_w_._o_r_g

       _f_f_t_w_-_w_i_s_d_o_m_-_t_o_-_c_o_n_f  reads  wisdom from standard input and
       writes the configuration to standard output.  It can  eas-
       ily be combined with the _f_f_t_w_-_w_i_s_d_o_m tool, for example:

       fftw-wisdom -n cof1024 cob1024 -o wisdom
       fftw-wisdom-to-conf < wisdom > conf.c

       will create a configuration "conf.c" containing only those
       parts of FFTW needed for the  optimized  complex  forwards
       and  backwards  out-of-place transforms of size 1024 (also
       saving the wisdom itself in "wisdom").

       Alternatively, you can run  your  actual  program,  export
       wisdom  for  all  plans  that  were  created  (ideally  in
       FFTW_PATIENT or FFTW_EXHAUSTIVE mode), use this  as  input
       for  _f_f_t_w_-_w_i_s_d_o_m_-_t_o_-_c_o_n_f,  and  then  re-link your program
       with the resulting configuration routine.

       Note that the configuration routine does not  contain  the
       wisdom,  only the routines necessary to implement the wis-
       dom, so your program should  also  import  the  wisdom  in
       order to benefit from the pre-optimized plans.




fftw                      February, 2003                        1





FFTW-WISDOM-TO-CONF(1)         fftw        FFTW-WISDOM-TO-CONF(1)


OOPPTTIIOONNSS
       --hh, ----hheellpp
              Display help on the command-line options and usage.

       --VV, ----vveerrssiioonn
              Print the version number and copyright information.

BBUUGGSS
       Send bug reports to fftw@fftw.org.

AAUUTTHHOORRSS
       Written by Steven G. Johnson and Matteo Frigo.

       Copyright (c) 2003, 2006 Matteo Frigo
       Copyright  (c) 2003, 2006 Massachusetts Institute of Tech-
       nology

SSEEEE AALLSSOO
       fftw-wisdom(1)






































fftw                      February, 2003                        2


